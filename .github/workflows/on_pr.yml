name: Build and Deploy dbt Job

on:
  push:
    branches: ["master"]
    paths:
      - "models/**"
      - "seeds/**"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: liranc14/ducklakehouse

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # full history needed for diffs

      - name: Detect changed models and seeds
        id: changes
        run: |
          # Fetch remote master safely
          git fetch origin master || true

          # Detect added/modified models and seeds
          ADDED_MODIFIED=$(git diff --name-only --diff-filter=AM origin/master -- "models/" "seeds/" | grep -E '\.sql$|\.csv$' || true)

          # Detect deleted models and seeds
          DELETED=$(git diff --name-only --diff-filter=D origin/master -- "models/" "seeds/" | grep -E '\.sql$|\.csv$' || true)

          # Write multiline outputs safely
          {
            echo "added_or_modified<<EOF"
            echo "$ADDED_MODIFIED"
            echo "EOF"
          } >> "$GITHUB_OUTPUT"

          {
            echo "deleted<<EOF"
            echo "$DELETED"
            echo "EOF"
          } >> "$GITHUB_OUTPUT"

          echo "Added/Modified files:"
          echo "$ADDED_MODIFIED"
          echo "Deleted files:"
          echo "$DELETED"

      - name: Process added/modified files
        if: steps.changes.outputs.added_or_modified != ''
        run: |
          echo "Processing added/modified files..."
          echo "${{ steps.changes.outputs.added_or_modified }}" | while read -r path; do
            echo " -> $path"
            # Example: run dbt for models
            if [[ "$path" == models/*.sql ]]; then
              dbt run -s "path:$path"
            fi

            # Example: run dbt seed for seeds
            if [[ "$path" == seeds/*.csv ]]; then
              dbt seed --select "$(basename "$path" .csv)"
            fi
          done

      - name: Process deleted files
        if: steps.changes.outputs.deleted != ''
        run: |
          echo "Processing deleted files..."
          echo "${{ steps.changes.outputs.deleted }}" | while read -r path; do
            echo " -> $path"
            # Example: log deletion handling
            # In dbt you might need to drop relations manually if required
          done
